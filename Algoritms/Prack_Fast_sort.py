import timeit
#Задание 1
print("Задание 1")
def fib(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fib(n-1) + fib(n-2)
print(fib(5))
"""
Анализ стека
Когда n =5, то n!=0 и n!=0, то применяется fib(n-1) + fib(n-2)
Что равняется fib(4) + fib(3), т.к. оба n != 0 или != 1, то с тек уходит 
(fib(3) + fib(2)) + (fib(2) + fib (1) теперь один n ==1, а остальные не попадают под базовое условие получаем
((fib(2) + fib(1)) + (fib(1) + fib(0))) + ((fib(1) + fib(0)) + 1) только один не попадает под базовое условие
((fib(1) + fib(0)) + 1) + (1 + 0)) + ((1 + 0) +1) в итоге получаем стеки с цифрами для суммирования
((1+0)+1)+((1+0)+(1+0)+1)=5
"""
#Задание 2
print("Задание 2")
arr = [58,12,45,100,89,64,2,5,32,84,75,1,5454,898]
def merge_sort(arr):
    if len(arr) > 1:
        mid = len(arr)//2
        left_half = arr[:mid]
        right_half = arr[mid:]
        merge_sort(left_half)
        merge_sort(right_half)
        i = j = k = 0
        while i < len(left_half) and j < len(right_half):
            if left_half[i] < right_half[j]:
                arr[k] = left_half[i]
                i+=1
            else:
                arr[k] = right_half[j]
                j+=1
            k +=1
        while i < len(left_half):
            arr[k] = left_half[i]
            i +=1
            k += 1
        while j < len(right_half):
            arr[k] = right_half[j]
            j += 1
            k += 1
        return arr[-1]
print(merge_sort(arr))
#Задание 3
print("Задание 3")
def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[len(arr)//2]
        left = []
        right = []
        middle =[]
        for i in arr:
            if i > pivot:
                right.append(i)
            elif i < pivot:
                left.append(i)
            else:
                middle.append(i)
        return quick_sort(left) + middle + quick_sort(right)
print(quick_sort(arr))
#Задание 4
print("Задание 4")
def selected_sort(arr):
    n = len(arr)
    for i in range(n):
        min_index = i
        for j in range(i+1, n):
            if arr[j] < arr[min_index]:
                min_index = j
        arr[i], arr[min_index] = arr[min_index], arr[i]
    return arr
arr = [441, 816, 920, 148, 696, 167, 416, 748, 137, 472]
arr1 = arr
time_quick_sort = timeit.timeit(lambda: quick_sort, number=1000)
quick_sort(arr)
time_selected_sort = timeit.timeit(lambda: selected_sort, number=1000)
selected_sort(arr1)
time_a = time_quick_sort - time_selected_sort
print("Время быстрой сортировки 10 элементов ", time_quick_sort)
print("Время сортировки методом вставки 10 элементов ", time_selected_sort)
print("")
arr = [825, 915, 736, 345, 250, 723, 33, 268, 759, 506, 324, 882, 811, 918, 24, 341, 520, 248, 363, 920, 24, 725, 672, 736, 477, 486, 268, 428, 971, 366, 352, 809, 307, 13, 728, 102, 932, 829, 85, 990, 491, 413, 276, 545, 589, 46, 773, 46, 753, 680, 69, 544, 616, 58, 572, 141, 449, 169, 129, 541, 819, 292, 745, 31, 262, 369, 28, 915, 670, 518, 943, 433, 79, 290, 663, 484, 255, 222, 578, 290, 260, 751, 616, 357, 264, 310, 808, 939, 694, 38, 723, 91, 880, 353, 278, 609, 270, 572, 746, 281]
arr1 = arr
time_quick_sort = timeit.timeit(lambda: quick_sort, number=1000)
quick_sort(arr)
time_selected_sort = timeit.timeit(lambda: selected_sort, number=1000)
selected_sort(arr1)
print("Время быстрой сортировки 100 элементов ", time_quick_sort)
print("Время сортировки методом вставки 100 элементов ", time_selected_sort)
print("")
arr = [479, 401, 285, 535, 167, 227, 722, 604, 752, 145, 337, 328, 929, 920, 775, 275, 673, 436, 866, 791, 145, 640, 532, 459, 290, 411, 921, 398, 714, 939, 798, 316, 261, 513, 879, 461, 619, 672, 218, 352, 174, 739, 621, 3, 802, 974, 389, 820, 32, 94, 64, 952, 24, 465, 271, 950, 218, 419, 747, 351, 594, 583, 276, 132, 252, 679, 507, 811, 110, 344, 891, 785, 509, 833, 205, 841, 564, 275, 339, 312, 522, 445, 593, 531, 422, 198, 16, 177, 288, 140, 244, 163, 960, 166, 77, 409, 712, 332, 854, 532, 627, 22, 561, 636, 674, 275, 252, 941, 559, 507, 623, 31, 210, 193, 427, 589, 620, 974, 110, 148, 287, 458, 19, 484, 159, 996, 222, 509, 716, 84, 158, 631, 78, 743, 553, 862, 205, 544, 595, 749, 996, 370, 803, 442, 347, 42, 53, 258, 272, 859, 51, 244, 680, 971, 439, 301, 326, 295, 837, 749, 892, 551, 558, 235, 46, 288, 330, 718, 457, 421, 838, 183, 613, 997, 254, 485, 539, 18, 852, 444, 81, 694, 740, 302, 827, 342, 594, 655, 321, 220, 967, 910, 166, 206, 625, 512, 19, 843, 977, 880, 426, 256, 545, 712, 174, 85, 229, 810, 788, 930, 497, 8, 623, 578, 1, 948, 367, 172, 508, 475, 262, 139, 211, 571, 886, 399, 120, 265, 447, 820, 94, 560, 904, 914, 251, 727, 733, 973, 701, 563, 867, 920, 627, 816, 597, 838, 176, 26, 312, 61, 50, 212, 433, 840, 677, 531, 20, 862, 554, 273, 775, 526, 405, 46, 778, 768, 685, 511, 708, 168, 680, 124, 635, 473, 341, 9, 271, 852, 622, 53, 531, 554, 406, 456, 480, 407, 722, 231, 828, 728, 14, 887, 121, 449, 524, 227, 234, 897, 279, 461, 313, 533, 881, 853, 422, 623, 469, 547, 189, 890, 766, 503, 667, 49, 416, 280, 612, 334, 457, 165, 435, 51, 663, 129, 746, 183, 743, 154, 871, 643, 225, 498, 190, 896, 571, 582, 86, 990, 53, 449, 49, 863, 930, 547, 804, 383, 962, 770, 968, 940, 509, 229, 526, 502, 778, 834, 822, 749, 36, 706, 561, 825, 97, 244, 545, 328, 672, 207, 35, 787, 598, 657, 416, 465, 27, 372, 619, 147, 143, 625, 703, 906, 255, 501, 356, 313, 421, 853, 915, 971, 188, 604, 731, 698, 130, 664, 920, 792, 610, 478, 869, 668, 369, 509, 808, 305, 902, 14, 78, 699, 336, 33, 881, 74, 249, 749, 172, 531, 248, 321, 543, 14, 1, 609, 38, 940, 423, 893, 151, 443, 984, 595, 832, 395, 521, 708, 257, 972, 338, 98, 357, 222, 499, 860, 139, 61, 235, 97, 422, 616, 17, 453, 207, 448, 645, 246, 339, 352, 946, 577, 519, 1000, 813, 822, 919, 489, 909, 687, 916, 549, 657, 491, 292, 49, 250, 593, 210, 859, 949, 375, 353, 775, 832, 731, 736, 171, 333, 426, 809, 634, 510, 1, 468, 885, 784, 45, 535, 659, 988, 923, 181, 351, 101, 86, 537, 523, 641, 258, 572, 491, 371, 612, 201, 856, 233, 405, 641, 886, 663, 811, 68, 926, 947, 789, 991, 703, 874, 571, 58, 731, 65, 626, 637, 882, 145, 351, 387, 888, 209, 103, 96, 716, 59, 608, 596, 288, 712, 554, 956, 37, 800, 35, 340, 458, 73, 7, 80, 695, 30, 864, 693, 109, 942, 677, 212, 592, 610, 419, 995, 495, 658, 864, 379, 952, 264, 10, 978, 196, 804, 683, 317, 931, 808, 803, 658, 350, 990, 120, 772, 743, 827, 129, 448, 497, 934, 533, 664, 754, 370, 953, 576, 554, 320, 157, 538, 935, 73, 175, 269, 675, 75, 821, 453, 952, 310, 316, 47, 771, 166, 286, 119, 888, 489, 714, 442, 230, 608, 607, 829, 233, 576, 183, 467, 314, 953, 955, 940, 137, 192, 672, 229, 672, 365, 235, 117, 102, 317, 229, 533, 464, 221, 642, 56, 287, 162, 816, 349, 767, 814, 878, 862, 434, 843, 990, 453, 872, 464, 771, 63, 170, 93, 605, 294, 758, 584, 755, 605, 367, 470, 141, 199, 293, 528, 219, 921, 238, 368, 240, 386, 678, 895, 149, 156, 674, 46, 269, 319, 371, 471, 827, 25, 514, 958, 942, 260, 896, 984, 541, 563, 787, 217, 683, 725, 933, 663, 343, 86, 827, 387, 238, 247, 902, 407, 302, 524, 316, 285, 42, 610, 336, 692, 567, 410, 159, 747, 92, 324, 154, 397, 276, 598, 335, 55, 579, 152, 349, 204, 628, 921, 689, 780, 740, 234, 444, 159, 417, 464, 96, 779, 254, 8, 517, 154, 363, 422, 298, 254, 932, 878, 25, 788, 478, 163, 153, 829, 304, 937, 533, 861, 736, 420, 886, 824, 564, 496, 597, 383, 905, 174, 137, 201, 230, 598, 964, 621, 159, 138, 107, 32, 519, 181, 668, 436, 198, 151, 886, 263, 753, 56, 811, 448, 807, 424, 110, 631, 565, 778, 937, 94, 100, 810, 735, 211, 228, 116, 892, 893, 336, 814, 707, 677, 743, 180, 265, 865, 705, 707, 822, 264, 682, 250, 51, 857, 972, 629, 782, 124, 123, 14, 918, 498, 323, 318, 979, 782, 551, 778, 306, 397, 120, 164, 570, 154, 403, 809, 784, 171, 37, 852, 331, 189, 490, 667, 536, 498, 658, 204, 742, 65, 108, 755, 190, 366, 612, 742, 190, 127, 880, 54, 616, 491, 657, 420, 905, 631, 917, 850, 890, 153, 412, 308, 849, 399, 16, 923, 432, 489, 511, 927, 971, 342, 242, 375, 398, 833, 403, 301, 569, 623, 751, 490, 171, 271, 823, 616, 371, 380, 284, 255, 234, 757, 985, 192, 737, 551, 157, 108, 986, 724, 294, 581, 177, 228, 308, 39, 852, 141, 367, 941, 588, 462, 884, 957, 131, 591, 999, 821, 462, 772, 242, 878, 269, 578, 230, 952, 739, 281, 513, 636, 340, 331, 15, 535, 508, 227, 236, 287, 972, 209, 156, 902, 468, 753, 416, 47, 694, 162, 422, 718, 947, 444, 272, 165, 530, 767, 548, 148, 819, 174, 379]
arr1 = arr
time_quick_sort = timeit.timeit(lambda: quick_sort, number=1000)
quick_sort(arr)
time_selected_sort = timeit.timeit(lambda: selected_sort, number=1000)
selected_sort(arr1)
print("Время быстрой сортировки 1000 элементов ", time_quick_sort)
print("Время сортировки методом вставки 1000 элементов ", time_selected_sort)